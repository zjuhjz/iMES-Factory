// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using iMES.Core.EFDbContext;

#nullable disable

namespace iMES.Core.Migrations
{
    [DbContext(typeof(SysDbContext))]
    [Migration("20231003145840_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("iMES.Entity.DomainModels.Base_DefectItem", b =>
                {
                    b.Property<int>("DefectItem_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DefectItem_Id"));

                    b.Property<string>("Attachment")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DefectItemCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DefectItemName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Modifier")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.HasKey("DefectItem_Id");

                    b.ToTable("Base_DefectItem");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Base_DesktopMenu", b =>
                {
                    b.Property<int>("DesktopMenu_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DesktopMenu_Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte>("Enable")
                        .HasColumnType("tinyint");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<string>("MenuName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("MenuUrl")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Modifier")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.HasKey("DesktopMenu_Id");

                    b.ToTable("Base_DesktopMenu");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Base_MaterialDetail", b =>
                {
                    b.Property<int>("MaterialDetail_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaterialDetail_Id"));

                    b.Property<int>("ChildProduct_Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Modifier")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<int>("ParentProduct_Id")
                        .HasColumnType("int");

                    b.Property<int>("QuantityPer")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("MaterialDetail_Id");

                    b.ToTable("Base_MaterialDetail");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Base_MeritPay", b =>
                {
                    b.Property<int>("MeritPay_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MeritPay_Id"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Modifier")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<int?>("Process_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Product_Id")
                        .HasColumnType("int");

                    b.Property<int?>("StandardHour")
                        .HasColumnType("int");

                    b.Property<int?>("StandardMin")
                        .HasColumnType("int");

                    b.Property<int?>("StandardNumber")
                        .HasColumnType("int");

                    b.Property<int?>("StandardSec")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal");

                    b.Property<int?>("Unit_Id")
                        .HasColumnType("int");

                    b.HasKey("MeritPay_Id");

                    b.ToTable("Base_MeritPay");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Base_Notice", b =>
                {
                    b.Property<int>("Notice_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Notice_Id"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Modifier")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<string>("NoticeContent")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("NoticeTitle")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("NoticeType")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Notice_Id");

                    b.ToTable("Base_Notice");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Base_NumberRule", b =>
                {
                    b.Property<int>("NumberRule_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NumberRule_Id"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FormCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("GenerativeRule")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Modifier")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<string>("Prefix")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("SerialNumber")
                        .HasColumnType("int");

                    b.Property<string>("SubmitTime")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("NumberRule_Id");

                    b.ToTable("Base_NumberRule");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Base_Process", b =>
                {
                    b.Property<int>("Process_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Process_Id"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DefectItem")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Modifier")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<string>("ProcessCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProcessName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SubmitWorkLimit")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<decimal>("SubmitWorkMatch")
                        .HasColumnType("decimal");

                    b.HasKey("Process_Id");

                    b.ToTable("Base_Process");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Base_ProcessLine", b =>
                {
                    b.Property<int>("ProcessLine_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProcessLine_Id"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Modifier")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<string>("ProcessLineCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProcessLineName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ProcessLine_Id");

                    b.ToTable("Base_ProcessLine");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Base_ProcessLineList", b =>
                {
                    b.Property<int>("ProcessLineList_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProcessLineList_Id"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Modifier")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<int?>("ProcessLineDown_Id")
                        .HasColumnType("int");

                    b.Property<string>("ProcessLineType")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ProcessLine_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Process_Id")
                        .HasColumnType("int");

                    b.Property<int>("Sequence")
                        .HasColumnType("int");

                    b.Property<decimal?>("SubmitWorkMatch")
                        .HasColumnType("decimal");

                    b.HasKey("ProcessLineList_Id");

                    b.HasIndex("ProcessLine_Id");

                    b.ToTable("Base_ProcessLineList");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Base_ProcessList", b =>
                {
                    b.Property<int>("ProcessList_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProcessList_Id"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DataPointName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DataPointType")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Modifier")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<int>("Process_Id")
                        .HasColumnType("int");

                    b.HasKey("ProcessList_Id");

                    b.HasIndex("Process_Id");

                    b.ToTable("Base_ProcessList");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Base_Product", b =>
                {
                    b.Property<int>("Product_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Product_Id"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FinishedProduct")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("InventoryQty")
                        .HasColumnType("int");

                    b.Property<int?>("MaxInventory")
                        .HasColumnType("int");

                    b.Property<int?>("MinInventory")
                        .HasColumnType("int");

                    b.Property<string>("Modifier")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<int?>("Process_Id")
                        .HasColumnType("int");

                    b.Property<string>("ProductAttribute")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProductStandard")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("SafeInventory")
                        .HasColumnType("int");

                    b.Property<int>("Unit_Id")
                        .HasColumnType("int");

                    b.HasKey("Product_Id");

                    b.ToTable("Base_Product");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Base_WorkShop", b =>
                {
                    b.Property<string>("WorkShopId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<int?>("Area")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Enable")
                        .HasColumnType("int");

                    b.Property<string>("MainPerson")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Modifier")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("WorkShopCode")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("WorkShopName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("WorkShopId");

                    b.ToTable("Base_WorkShop");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Cal_Holiday", b =>
                {
                    b.Property<string>("HolidayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("HolidayType")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Modifier")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("TheDay")
                        .HasColumnType("date");

                    b.HasKey("HolidayId");

                    b.ToTable("Cal_Holiday");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Cal_Plan", b =>
                {
                    b.Property<string>("PlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<string>("ChangeShiftType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("Modifier")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<string>("PlanCode")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PlanName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Remark")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ShiftType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("date");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TeamType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PlanId");

                    b.ToTable("Cal_Plan");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Cal_PlanShift", b =>
                {
                    b.Property<string>("PlanShiftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("EndTime")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Modifier")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<string>("PlanId")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.Property<string>("PlanShiftName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Sequence")
                        .HasColumnType("int");

                    b.Property<string>("StartTime")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("PlanShiftId");

                    b.ToTable("Cal_PlanShift");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Cal_PlanTeam", b =>
                {
                    b.Property<string>("PlanTeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Modifier")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<string>("PlanId")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.Property<int?>("Sequence")
                        .HasColumnType("int");

                    b.Property<string>("TeamCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TeamId")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PlanTeamId");

                    b.ToTable("Cal_PlanTeam");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Cal_Team", b =>
                {
                    b.Property<string>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Modifier")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("TeamCode")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TeamType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("TeamId");

                    b.ToTable("Cal_Team");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Cal_TeamMember", b =>
                {
                    b.Property<string>("TeamMemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Modifier")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNo")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("TeamId")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserTrueName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("User_Id")
                        .HasColumnType("int");

                    b.HasKey("TeamMemberId");

                    b.HasIndex("TeamId");

                    b.ToTable("Cal_TeamMember");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Cal_TeamShift", b =>
                {
                    b.Property<string>("TeamShiftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<string>("ChangeShiftType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Modifier")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<string>("PlanId")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.Property<int?>("Sequence")
                        .HasColumnType("int");

                    b.Property<string>("ShiftId")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.Property<string>("ShiftName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TeamId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TeamName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("TheDate")
                        .HasColumnType("date");

                    b.HasKey("TeamShiftId");

                    b.ToTable("Cal_TeamShift");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Equip_DevCatalog", b =>
                {
                    b.Property<string>("DevCatalogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("DevCatalogCode")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DevCatalogName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Enable")
                        .HasColumnType("int");

                    b.Property<string>("Modifier")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<string>("ParentId")
                        .HasColumnType("varchar(36)");

                    b.Property<string>("Remark")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("DevCatalogId");

                    b.ToTable("Equip_DevCatalog");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Equip_Device", b =>
                {
                    b.Property<string>("DeviceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("DeviceBrand")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DeviceCode")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DeviceName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ModelType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Modifier")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<string>("ParentId")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.Property<string>("WorkShopId")
                        .HasColumnType("varchar(36)");

                    b.HasKey("DeviceId");

                    b.ToTable("Equip_Device");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Equip_MaintainPaper", b =>
                {
                    b.Property<string>("MaintainPaperId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("DeviceBrand")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DeviceCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DeviceName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MaintainPaperCode")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("MaintainPaperName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Modifier")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("ReportDate")
                        .HasColumnType("date");

                    b.HasKey("MaintainPaperId");

                    b.ToTable("Equip_MaintainPaper");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Equip_SpotMaintPlan", b =>
                {
                    b.Property<string>("SpotMaintPlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<int>("GhzQty")
                        .HasColumnType("int");

                    b.Property<int>("GhzQtyLat")
                        .HasColumnType("int");

                    b.Property<string>("Modifier")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NextCheckDate")
                        .HasColumnType("datetime");

                    b.Property<int>("PlanItemType")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("SpotMaintPlanCode")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("SpotMaintPlanName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("SpotMaintPlanId");

                    b.ToTable("Equip_SpotMaintPlan");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Equip_SpotMaintPlanDevice", b =>
                {
                    b.Property<string>("SpotMaintPlanDeviceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("DeviceBrand")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DeviceCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DeviceId")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.Property<string>("DeviceName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ModelType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Modifier")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("SpotMaintPlanId")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.HasKey("SpotMaintPlanDeviceId");

                    b.ToTable("Equip_SpotMaintPlanDevice");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Equip_SpotMaintPlanProject", b =>
                {
                    b.Property<string>("SpotMaintPlanProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ItemContent")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ItemStandard")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.Property<string>("Modifier")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<string>("SpotMaintPlanId")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.Property<string>("SpotMaintenanceCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("SpotMaintenanceId")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.Property<string>("SpotMaintenanceName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("SpotMaintPlanProjectId");

                    b.ToTable("Equip_SpotMaintPlanProject");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Equip_SpotMaintWorkOrder", b =>
                {
                    b.Property<string>("SpotMaintWorkOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Modifier")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<DateTime>("PlanEndDate")
                        .HasColumnType("date");

                    b.Property<int>("PlanItemType")
                        .HasColumnType("int");

                    b.Property<DateTime>("PlanStartDate")
                        .HasColumnType("date");

                    b.Property<string>("Remark")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("SpotMaintPlanCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("SpotMaintPlanId")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.Property<string>("SpotMaintPlanName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SpotMaintWorkOrderCode")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("SpotMaintWorkOrderId");

                    b.ToTable("Equip_SpotMaintWorkOrder");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Equip_SpotMaintenance", b =>
                {
                    b.Property<string>("SpotMaintenanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("Enable")
                        .HasColumnType("int");

                    b.Property<string>("ItemContent")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ItemStandard")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.Property<string>("Modifier")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<string>("SpotMaintenanceCode")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("SpotMaintenanceName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("SpotMaintenanceId");

                    b.ToTable("Equip_SpotMaintenance");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.FormCollectionObject", b =>
                {
                    b.Property<string>("FormCollectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("FormData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormId")
                        .HasColumnType("varchar(36)");

                    b.Property<string>("Modifier")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FormCollectionId");

                    b.ToTable("FormCollectionObject");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.FormDesignOptions", b =>
                {
                    b.Property<string>("FormId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DaraggeOptions")
                        .HasColumnType("TEXT");

                    b.Property<string>("FormConfig")
                        .HasColumnType("TEXT");

                    b.Property<string>("FormFields")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormOptions")
                        .HasColumnType("TEXT");

                    b.Property<string>("Modifier")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<string>("TableConfig")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("FormId");

                    b.ToTable("FormDesignOptions");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Quality_Defect", b =>
                {
                    b.Property<int>("DefectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DefectId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DefectLevel")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DefectName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DefectType")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Modifier")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("DefectId");

                    b.ToTable("Quality_Defect");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Quality_InComingCheck", b =>
                {
                    b.Property<int>("InComingCheckId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InComingCheckId"));

                    b.Property<DateTime>("CheckDate")
                        .HasColumnType("date");

                    b.Property<int>("CheckNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("DisStandNumber")
                        .HasColumnType("int");

                    b.Property<string>("InComingCheckCode")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("InComingCheckName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("InComingDate")
                        .HasColumnType("date");

                    b.Property<string>("Modifier")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ProductStandard")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Product_Id")
                        .HasColumnType("int");

                    b.Property<int>("ReciveNumber")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Result")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("InComingCheckId");

                    b.ToTable("Quality_InComingCheck");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Quality_InComingCheckTestItem", b =>
                {
                    b.Property<int>("InComingCheckTestItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InComingCheckTestItemId"));

                    b.Property<string>("CheckMethod")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("CrQuantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("InComingCheckId")
                        .HasColumnType("int");

                    b.Property<int?>("MajQuantity")
                        .HasColumnType("int");

                    b.Property<int?>("MinQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Modifier")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<string>("QCTool")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remark")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<decimal?>("StanderValue")
                        .HasColumnType("decimal");

                    b.Property<int>("TemplateId")
                        .HasColumnType("int");

                    b.Property<int>("TemplateTestItemId")
                        .HasColumnType("int");

                    b.Property<string>("TestItemCode")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("TestItemId")
                        .HasColumnType("int");

                    b.Property<string>("TestItemName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TestItemType")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("ThresholdMax")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ThresholdMin")
                        .HasColumnType("decimal");

                    b.HasKey("InComingCheckTestItemId");

                    b.HasIndex("InComingCheckId");

                    b.ToTable("Quality_InComingCheckTestItem");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Quality_OutCheck", b =>
                {
                    b.Property<int>("OutCheckId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OutCheckId"));

                    b.Property<DateTime>("CheckDate")
                        .HasColumnType("date");

                    b.Property<int>("CheckNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("DisStandNumber")
                        .HasColumnType("int");

                    b.Property<string>("Modifier")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<string>("OutCheckCode")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("OutCheckName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("OutDate")
                        .HasColumnType("date");

                    b.Property<int>("OutNumber")
                        .HasColumnType("int");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ProductStandard")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Product_Id")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Result")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("OutCheckId");

                    b.ToTable("Quality_OutCheck");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Quality_OutCheckTestItem", b =>
                {
                    b.Property<int>("OutCheckTestItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OutCheckTestItemId"));

                    b.Property<string>("CheckMethod")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("CrQuantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("MajQuantity")
                        .HasColumnType("int");

                    b.Property<int?>("MinQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Modifier")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<int>("OutCheckId")
                        .HasColumnType("int");

                    b.Property<string>("QCTool")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remark")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<decimal?>("StanderValue")
                        .HasColumnType("decimal");

                    b.Property<int>("TemplateId")
                        .HasColumnType("int");

                    b.Property<int>("TemplateTestItemId")
                        .HasColumnType("int");

                    b.Property<string>("TestItemCode")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("TestItemId")
                        .HasColumnType("int");

                    b.Property<string>("TestItemName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TestItemType")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("ThresholdMax")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ThresholdMin")
                        .HasColumnType("decimal");

                    b.HasKey("OutCheckTestItemId");

                    b.HasIndex("OutCheckId");

                    b.ToTable("Quality_OutCheckTestItem");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Quality_ProcessCheck", b =>
                {
                    b.Property<int>("ProcessCheckId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProcessCheckId"));

                    b.Property<DateTime>("CheckDate")
                        .HasColumnType("date");

                    b.Property<string>("CheckType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("CrQuantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("DisStandNumber")
                        .HasColumnType("int");

                    b.Property<int?>("MajQuantity")
                        .HasColumnType("int");

                    b.Property<int?>("MinQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Modifier")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<string>("ProcessCheckCode")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ProcessCheckName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ProcessCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ProcessName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("Process_Id")
                        .HasColumnType("int");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ProductStandard")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Product_Id")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Result")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("StandNumber")
                        .HasColumnType("int");

                    b.Property<string>("WorkOrderCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("WorkOrder_Id")
                        .HasColumnType("int");

                    b.HasKey("ProcessCheckId");

                    b.ToTable("Quality_ProcessCheck");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Quality_ProcessCheckTestItem", b =>
                {
                    b.Property<int>("ProcessCheckTestItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProcessCheckTestItemId"));

                    b.Property<string>("CheckMethod")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("CrQuantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("MajQuantity")
                        .HasColumnType("int");

                    b.Property<int?>("MinQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Modifier")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<int>("ProcessCheckId")
                        .HasColumnType("int");

                    b.Property<string>("QCTool")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remark")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<decimal?>("StanderValue")
                        .HasColumnType("decimal");

                    b.Property<int>("TemplateId")
                        .HasColumnType("int");

                    b.Property<int>("TemplateTestItemId")
                        .HasColumnType("int");

                    b.Property<string>("TestItemCode")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("TestItemId")
                        .HasColumnType("int");

                    b.Property<string>("TestItemName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TestItemType")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("ThresholdMax")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ThresholdMin")
                        .HasColumnType("decimal");

                    b.HasKey("ProcessCheckTestItemId");

                    b.HasIndex("ProcessCheckId");

                    b.ToTable("Quality_ProcessCheckTestItem");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Quality_Template", b =>
                {
                    b.Property<int>("TemplateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TemplateId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Enable")
                        .HasColumnType("int");

                    b.Property<string>("Modifier")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NextCheckDate")
                        .HasColumnType("datetime");

                    b.Property<string>("QcType")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Remark")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("TemplateCode")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("TemplateName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("TemplateId");

                    b.ToTable("Quality_Template");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Quality_TemplateProduct", b =>
                {
                    b.Property<int>("TemplateProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TemplateProductId"));

                    b.Property<int?>("CheckMin")
                        .HasColumnType("int");

                    b.Property<decimal?>("CrRate")
                        .HasColumnType("decimal");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("DisQualityMax")
                        .HasColumnType("int");

                    b.Property<decimal?>("MajRate")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MinRate")
                        .HasColumnType("decimal");

                    b.Property<string>("Modifier")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ProductStandard")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remark")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("TemplateId")
                        .HasColumnType("int");

                    b.HasKey("TemplateProductId");

                    b.ToTable("Quality_TemplateProduct");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Quality_TemplateTestItem", b =>
                {
                    b.Property<int>("TemplateTestItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TemplateTestItemId"));

                    b.Property<string>("CheckMethod")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Modifier")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<string>("QCTool")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remark")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<decimal?>("StanderValue")
                        .HasColumnType("decimal");

                    b.Property<int>("TemplateId")
                        .HasColumnType("int");

                    b.Property<string>("TestItemCode")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("TestItemId")
                        .HasColumnType("int");

                    b.Property<string>("TestItemName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TestItemType")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("ThresholdMax")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ThresholdMin")
                        .HasColumnType("decimal");

                    b.HasKey("TemplateTestItemId");

                    b.ToTable("Quality_TemplateTestItem");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Quality_TestItem", b =>
                {
                    b.Property<int>("TestItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TestItemId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Modifier")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<string>("QCTool")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remark")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("TestItemCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TestItemName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TestItemType")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("TestItemId");

                    b.ToTable("Quality_TestItem");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Sys_Dept", b =>
                {
                    b.Property<int>("Dept_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Dept_Id"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DeptCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DeptName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Modifier")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.HasKey("Dept_Id");

                    b.ToTable("Sys_Dept");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Sys_Dictionary", b =>
                {
                    b.Property<int>("Dic_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Dic_ID"));

                    b.Property<string>("Config")
                        .HasMaxLength(10000)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("DBServer")
                        .HasMaxLength(10000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DbSql")
                        .HasMaxLength(10000)
                        .HasColumnType("TEXT");

                    b.Property<string>("DicName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DicNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte>("Enable")
                        .HasColumnType("tinyint");

                    b.Property<string>("Modifier")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.HasKey("Dic_ID");

                    b.ToTable("Sys_Dictionary");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Sys_DictionaryList", b =>
                {
                    b.Property<int>("DicList_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DicList_ID"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("DicName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DicValue")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Dic_ID")
                        .HasColumnType("int");

                    b.Property<byte?>("Enable")
                        .HasColumnType("tinyint");

                    b.Property<string>("Modifier")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.HasKey("DicList_ID");

                    b.HasIndex("Dic_ID");

                    b.ToTable("Sys_DictionaryList");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Sys_Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("BeginDate")
                        .HasColumnType("datetime");

                    b.Property<string>("BrowserType")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ElapsedTime")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ExceptionInfo")
                        .HasMaxLength(10000)
                        .HasColumnType("TEXT");

                    b.Property<string>("LogType")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("RequestParameter")
                        .HasMaxLength(10000)
                        .HasColumnType("TEXT");

                    b.Property<string>("ResponseParameter")
                        .HasMaxLength(10000)
                        .HasColumnType("TEXT");

                    b.Property<int?>("Role_Id")
                        .HasColumnType("int");

                    b.Property<string>("ServiceIP")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("Success")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasMaxLength(30000)
                        .HasColumnType("TEXT");

                    b.Property<string>("UserIP")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UserName")
                        .HasMaxLength(30000)
                        .HasColumnType("varchar(max)");

                    b.Property<int?>("User_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Sys_Log");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Sys_Menu", b =>
                {
                    b.Property<int>("Menu_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Menu_Id"));

                    b.Property<string>("Auth")
                        .HasMaxLength(10000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Creator")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte?>("Enable")
                        .HasColumnType("tinyint");

                    b.Property<string>("Icon")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MenuName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("MenuType")
                        .HasColumnType("int");

                    b.Property<string>("Modifier")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("TableName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Url")
                        .HasMaxLength(10000)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Menu_Id");

                    b.ToTable("Sys_Menu");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Sys_QuartzLog", b =>
                {
                    b.Property<string>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("ElapsedTime")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ErrorMsg")
                        .HasColumnType("TEXT");

                    b.Property<string>("Id")
                        .HasColumnType("varchar(36)");

                    b.Property<string>("Modifier")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<string>("ResponseContent")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Result")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StratDate")
                        .HasColumnType("datetime");

                    b.Property<string>("TaskName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("LogId");

                    b.ToTable("Sys_QuartzLog");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Sys_QuartzOptions", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<string>("ApiUrl")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("AuthKey")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AuthValue")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CronExpression")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Describe")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("LastRunTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Method")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Modifier")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<string>("PostData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TaskName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("TimeOut")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Sys_QuartzOptions");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Sys_Role", b =>
                {
                    b.Property<int>("Role_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Role_Id"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Creator")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeleteBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeptName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Dept_Id")
                        .HasColumnType("int");

                    b.Property<byte?>("Enable")
                        .HasColumnType("tinyint");

                    b.Property<string>("Modifier")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("RoleName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Role_Id");

                    b.ToTable("Sys_Role");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Sys_RoleAuth", b =>
                {
                    b.Property<int>("Auth_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Auth_Id"));

                    b.Property<string>("AuthValue")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Creator")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("Menu_Id")
                        .HasColumnType("int");

                    b.Property<string>("Modifier")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Role_Id")
                        .HasColumnType("int");

                    b.Property<int?>("User_Id")
                        .HasColumnType("int");

                    b.HasKey("Auth_Id");

                    b.HasIndex("Role_Id");

                    b.ToTable("Sys_RoleAuth");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Sys_TableColumn", b =>
                {
                    b.Property<int>("ColumnId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ColumnId"));

                    b.Property<int?>("ApiInPut")
                        .HasColumnType("int");

                    b.Property<int?>("ApiIsNull")
                        .HasColumnType("int");

                    b.Property<int?>("ApiOutPut")
                        .HasColumnType("int");

                    b.Property<int?>("ColSize")
                        .HasColumnType("int");

                    b.Property<string>("ColumnCnName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColumnName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColumnType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ColumnWidth")
                        .HasColumnType("int");

                    b.Property<string>("Columnformat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DropNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EditColNo")
                        .HasColumnType("int");

                    b.Property<int?>("EditRowNo")
                        .HasColumnType("int");

                    b.Property<string>("EditType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Enable")
                        .HasColumnType("int");

                    b.Property<int?>("IsColumnData")
                        .HasColumnType("int");

                    b.Property<int?>("IsDisplay")
                        .HasColumnType("int");

                    b.Property<int?>("IsImage")
                        .HasColumnType("int");

                    b.Property<int?>("IsKey")
                        .HasColumnType("int");

                    b.Property<int?>("IsNull")
                        .HasColumnType("int");

                    b.Property<int?>("IsReadDataset")
                        .HasColumnType("int");

                    b.Property<int?>("Maxlength")
                        .HasColumnType("int");

                    b.Property<string>("Modifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("Script")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SearchColNo")
                        .HasColumnType("int");

                    b.Property<int?>("SearchRowNo")
                        .HasColumnType("int");

                    b.Property<string>("SearchType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Sortable")
                        .HasColumnType("int");

                    b.Property<string>("TableName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Table_Id")
                        .HasColumnType("int");

                    b.HasKey("ColumnId");

                    b.HasIndex("Table_Id");

                    b.ToTable("Sys_TableColumn");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Sys_TableInfo", b =>
                {
                    b.Property<int>("Table_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Table_Id"));

                    b.Property<string>("CnName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColumnCNName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DBServer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataTableType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DetailCnName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DetailName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EditorType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Enable")
                        .HasColumnType("int");

                    b.Property<string>("ExpressField")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FolderName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Namespace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("RichText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SortName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TableName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TableTrueName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UploadField")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UploadMaxCount")
                        .HasColumnType("int");

                    b.HasKey("Table_Id");

                    b.ToTable("Sys_TableInfo");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Sys_Unit", b =>
                {
                    b.Property<int>("Unit_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Unit_Id"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Modifier")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("UnitName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Unit_Id");

                    b.ToTable("Sys_Unit");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Sys_User", b =>
                {
                    b.Property<int>("User_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("User_Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<int?>("AppType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AuditDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("AuditStatus")
                        .HasColumnType("int");

                    b.Property<string>("Auditor")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("DeptName")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("Dept_Id")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte>("Enable")
                        .HasColumnType("tinyint");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("HeadImageUrl")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<int>("IsRegregisterPhone")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("LastModifyPwdDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Mobile")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Modifier")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNo")
                        .HasMaxLength(22)
                        .HasColumnType("nvarchar(22)");

                    b.Property<string>("Remark")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("Role_Id")
                        .HasColumnType("int");

                    b.Property<string>("Tel")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Token")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UserPwd")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("UserTrueName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("User_Id");

                    b.ToTable("Sys_User");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Sys_VersionInfo", b =>
                {
                    b.Property<int>("VersionInfo_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VersionInfo_Id"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Modifier")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("VersionInfo_Id");

                    b.ToTable("Sys_VersionInfo");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Sys_WorkFlow", b =>
                {
                    b.Property<string>("WorkFlow_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<byte?>("Enable")
                        .HasColumnType("tinyint");

                    b.Property<string>("LineConfig")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modifier")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<string>("NodeConfig")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("WorkName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("WorkTable")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("WorkTableName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("WorkFlow_Id");

                    b.ToTable("Sys_WorkFlow");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Sys_WorkFlowStep", b =>
                {
                    b.Property<string>("WorkStepFlow_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<byte?>("Enable")
                        .HasColumnType("tinyint");

                    b.Property<string>("Modifier")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("StepId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("StepName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("StepType")
                        .HasColumnType("int");

                    b.Property<int?>("StepValue")
                        .HasColumnType("int");

                    b.Property<string>("WorkFlow_Id")
                        .HasColumnType("varchar(36)");

                    b.HasKey("WorkStepFlow_Id");

                    b.HasIndex("WorkFlow_Id");

                    b.ToTable("Sys_WorkFlowStep");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Sys_WorkFlowTable", b =>
                {
                    b.Property<string>("WorkFlowTable_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<int?>("AuditStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("CurrentOrderId")
                        .HasColumnType("int");

                    b.Property<byte?>("Enable")
                        .HasColumnType("tinyint");

                    b.Property<string>("Modifier")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<string>("WorkFlow_Id")
                        .HasColumnType("varchar(36)");

                    b.Property<string>("WorkName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("WorkTable")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("WorkTableKey")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("WorkTableName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("WorkFlowTable_Id");

                    b.ToTable("Sys_WorkFlowTable");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Sys_WorkFlowTableStep", b =>
                {
                    b.Property<string>("Sys_WorkFlowTableStep_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime?>("AuditDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("AuditId")
                        .HasColumnType("int");

                    b.Property<int?>("AuditStatus")
                        .HasColumnType("int");

                    b.Property<string>("Auditor")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<byte?>("Enable")
                        .HasColumnType("tinyint");

                    b.Property<string>("Modifier")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("StepId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("StepName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("StepType")
                        .HasColumnType("int");

                    b.Property<int?>("StepValue")
                        .HasColumnType("int");

                    b.Property<string>("WorkFlowTable_Id")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.Property<string>("WorkFlow_Id")
                        .HasColumnType("varchar(36)");

                    b.HasKey("Sys_WorkFlowTableStep_Id");

                    b.HasIndex("WorkFlowTable_Id");

                    b.ToTable("Sys_WorkFlowTableStep");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Tools_Tool", b =>
                {
                    b.Property<string>("ToolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<string>("Brand")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("MaintenType")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Modifier")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NextMaintenDate")
                        .HasColumnType("date");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("QuantityAvail")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Spec")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Status")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ToolCode")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ToolName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ToolTypeId")
                        .HasColumnType("varchar(36)");

                    b.HasKey("ToolId");

                    b.ToTable("Tools_Tool");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Tools_ToolType", b =>
                {
                    b.Property<string>("ToolTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("MaintenPeriod")
                        .HasColumnType("int");

                    b.Property<string>("MaintenType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Modifier")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ToolTypeCode")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ToolTypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ToolTypeId");

                    b.ToTable("Tools_ToolType");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Tools_ToolsReceive", b =>
                {
                    b.Property<int>("ToolsReceiveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ToolsReceiveId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Modifier")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReceiveDate")
                        .HasColumnType("date");

                    b.Property<string>("Remark")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ToolsReceiveCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ToolsReceiveId");

                    b.ToTable("Tools_ToolsReceive");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Tools_ToolsReceiveList", b =>
                {
                    b.Property<int>("ToolsReceiveListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ToolsReceiveListId"));

                    b.Property<string>("Brand")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Modifier")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<string>("Spec")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ToolCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ToolId")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.Property<string>("ToolName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ToolsReceiveId")
                        .HasColumnType("int");

                    b.HasKey("ToolsReceiveListId");

                    b.HasIndex("ToolsReceiveId");

                    b.ToTable("Tools_ToolsReceiveList");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Tools_ToolsReturn", b =>
                {
                    b.Property<int>("ToolsReturnId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ToolsReturnId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Modifier")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ToolsReturnCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("ToolsReturnDate")
                        .HasColumnType("date");

                    b.HasKey("ToolsReturnId");

                    b.ToTable("Tools_ToolsReturn");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Tools_ToolsReturnList", b =>
                {
                    b.Property<int>("ToolsReturnListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ToolsReturnListId"));

                    b.Property<string>("Brand")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Modifier")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<string>("Spec")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ToolCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ToolId")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.Property<string>("ToolName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ToolsReturnId")
                        .HasColumnType("int");

                    b.HasKey("ToolsReturnListId");

                    b.HasIndex("ToolsReturnId");

                    b.ToTable("Tools_ToolsReturnList");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.View_Base_MaterialDetail", b =>
                {
                    b.Property<int>("MaterialDetail_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaterialDetail_Id"));

                    b.Property<string>("CProductCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CProductName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CProductStandard")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("CUnit_Id")
                        .HasColumnType("int");

                    b.Property<int>("ChildProduct_Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Modifier")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<string>("PProductCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PProductName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PProductStandard")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("PUnit_Id")
                        .HasColumnType("int");

                    b.Property<int>("ParentProduct_Id")
                        .HasColumnType("int");

                    b.Property<int>("QuantityPer")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("MaterialDetail_Id");

                    b.ToTable("View_Base_MaterialDetail");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.View_DefectItemDistribute", b =>
                {
                    b.Property<string>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<int?>("AllQty")
                        .HasColumnType("int");

                    b.Property<string>("CreateDate")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("DefectItemCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DefectItemName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PassPercent")
                        .HasMaxLength(101)
                        .HasColumnType("varchar(101)");

                    b.Property<int?>("Qty")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("View_DefectItemDistribute");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.View_DefectItemSummary", b =>
                {
                    b.Property<string>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<string>("DefectItem")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DefectItemName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("GoodQty")
                        .HasColumnType("int");

                    b.Property<int>("NoGoodQty")
                        .HasColumnType("int");

                    b.Property<string>("NoPassPercent")
                        .HasMaxLength(101)
                        .HasColumnType("varchar(101)");

                    b.Property<int?>("PlanQty")
                        .HasColumnType("int");

                    b.Property<string>("ProcessCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProcessName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProductName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProductStandard")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ReportQty")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UserTrueName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("WorkOrderCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ID");

                    b.ToTable("View_DefectItemSummary");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.View_EmployeePerformance", b =>
                {
                    b.Property<string>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<int?>("AllQty")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("GoodQty")
                        .HasColumnType("int");

                    b.Property<int>("NoGoodQty")
                        .HasColumnType("int");

                    b.Property<string>("PassPercent")
                        .HasMaxLength(101)
                        .HasColumnType("varchar(101)");

                    b.Property<string>("ProcessCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProcessName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProductStandard")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProductUser")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UnitName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("Unit_Id")
                        .HasColumnType("int");

                    b.Property<string>("UserTrueName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ID");

                    b.ToTable("View_EmployeePerformance");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.View_OutputStatistics", b =>
                {
                    b.Property<string>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<string>("CreateDate")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("GoodQty")
                        .HasColumnType("int");

                    b.Property<int?>("PlanQty")
                        .HasColumnType("int");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProductStandard")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("Unit_Id")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("View_OutputStatistics");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.View_ProductionReport", b =>
                {
                    b.Property<string>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime?>("ActualEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ActualStartDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("PlanEndDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("PlanQty")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PlanStartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ProcessCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProcessName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProductName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProductStandard")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("RealQty")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Status")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("SubmitWorkMatch")
                        .HasColumnType("decimal");

                    b.Property<DateTime?>("TaskActualEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TaskActualStartDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("TaskPlanEndDate")
                        .HasColumnType("datetime");

                    b.Property<int>("TaskPlanQty")
                        .HasColumnType("int");

                    b.Property<DateTime>("TaskPlanStartDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("TaskRealQty")
                        .HasColumnType("int");

                    b.Property<string>("UnitName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("Unit_Id")
                        .HasColumnType("int");

                    b.Property<string>("WorkOrderCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ID");

                    b.ToTable("View_ProductionReport");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.View_SalaryReport", b =>
                {
                    b.Property<string>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<int?>("AlreadyAppNumber")
                        .HasColumnType("int");

                    b.Property<int?>("AlreadyAppTime")
                        .HasColumnType("int");

                    b.Property<int?>("NoAlreadyAppNumber")
                        .HasColumnType("int");

                    b.Property<int?>("NoAlreadyAppTime")
                        .HasColumnType("int");

                    b.Property<string>("ProductUser")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ReportAll")
                        .HasColumnType("int");

                    b.Property<string>("ReportDate")
                        .HasColumnType("varchar(10)");

                    b.Property<decimal?>("Salary")
                        .HasColumnType("decimal");

                    b.Property<string>("UserName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserTrueName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ID");

                    b.ToTable("View_SalaryReport");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.View_StockBalance", b =>
                {
                    b.Property<int>("Product_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Product_Id"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Creator")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("InventoryQty")
                        .HasColumnType("int");

                    b.Property<int?>("MaxInventory")
                        .HasColumnType("int");

                    b.Property<int?>("MinInventory")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Process_Id")
                        .HasColumnType("int");

                    b.Property<string>("ProductAttribute")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProductStandard")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("SafeInventory")
                        .HasColumnType("int");

                    b.Property<int>("Unit_Id")
                        .HasColumnType("int");

                    b.HasKey("Product_Id");

                    b.ToTable("View_StockBalance");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.View_WareInOutDetail", b =>
                {
                    b.Property<string>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<int?>("ChangeQty")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Creator")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("FormQty")
                        .HasColumnType("int");

                    b.Property<string>("FromType")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<int?>("InventoryQty")
                        .HasColumnType("int");

                    b.Property<int?>("MaxInventory")
                        .HasColumnType("int");

                    b.Property<int?>("MinInventory")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProductName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProductStandard")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remark")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("SafeInventory")
                        .HasColumnType("int");

                    b.Property<int?>("Unit_Id")
                        .HasColumnType("int");

                    b.Property<string>("WareHouseBillCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("WareHouseBillType")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("WareHouseDate")
                        .HasColumnType("datetime");

                    b.HasKey("ID");

                    b.ToTable("View_WareInOutDetail");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Ware_OutWareHouseBill", b =>
                {
                    b.Property<int>("OutWareHouseBill_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OutWareHouseBill_Id"));

                    b.Property<string>("Attachement")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("AuditStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Modifier")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<string>("OutWareHouseBillCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("OutWareHouseBillType")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("OutWareHouseDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Remark")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("OutWareHouseBill_Id");

                    b.ToTable("Ware_OutWareHouseBill");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Ware_OutWareHouseBillList", b =>
                {
                    b.Property<int>("OutWareHouseBillList_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OutWareHouseBillList_Id"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("InventoryQty")
                        .HasColumnType("int");

                    b.Property<int?>("MaxInventory")
                        .HasColumnType("int");

                    b.Property<int?>("MinInventory")
                        .HasColumnType("int");

                    b.Property<string>("Modifier")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<int>("OutStoreQty")
                        .HasColumnType("int");

                    b.Property<int>("OutWareHouseBill_Id")
                        .HasColumnType("int");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProductStandard")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Product_Id")
                        .HasColumnType("int");

                    b.Property<int?>("SafeInventory")
                        .HasColumnType("int");

                    b.Property<int>("Unit_Id")
                        .HasColumnType("int");

                    b.HasKey("OutWareHouseBillList_Id");

                    b.HasIndex("OutWareHouseBill_Id");

                    b.ToTable("Ware_OutWareHouseBillList");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Ware_WareHouseBill", b =>
                {
                    b.Property<int>("WareHouseBill_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WareHouseBill_Id"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Modifier")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("WareHouseBillCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("WareHouseBillType")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("WareHouseDate")
                        .HasColumnType("datetime");

                    b.HasKey("WareHouseBill_Id");

                    b.ToTable("Ware_WareHouseBill");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Ware_WareHouseBillList", b =>
                {
                    b.Property<int>("WareHouseBillList_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WareHouseBillList_Id"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateID")
                        .HasColumnType("int");

                    b.Property<string>("Creator")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("InStoreQty")
                        .HasColumnType("int");

                    b.Property<int?>("InventoryQty")
                        .HasColumnType("int");

                    b.Property<int?>("MaxInventory")
                        .HasColumnType("int");

                    b.Property<int?>("MinInventory")
                        .HasColumnType("int");

                    b.Property<string>("Modifier")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifyID")
                        .HasColumnType("int");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProductStandard")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Product_Id")
                        .HasColumnType("int");

                    b.Property<int?>("SafeInventory")
                        .HasColumnType("int");

                    b.Property<int>("Unit_Id")
                        .HasColumnType("int");

                    b.Property<int>("WareHouseBill_Id")
                        .HasColumnType("int");

                    b.HasKey("WareHouseBillList_Id");

                    b.HasIndex("WareHouseBill_Id");

                    b.ToTable("Ware_WareHouseBillList");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.vSys_Dictionary", b =>
                {
                    b.Property<int>("Dic_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Dic_ID"));

                    b.Property<int>("DicList_ID")
                        .HasColumnType("int");

                    b.Property<string>("DicName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DicNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DicValue")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte?>("Enable")
                        .HasColumnType("tinyint");

                    b.HasKey("Dic_ID");

                    b.ToTable("vSys_Dictionary");
                });

            modelBuilder.Entity("iMES.Entity.Sys_Actions", b =>
                {
                    b.Property<int>("Action_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Action_Id"));

                    b.Property<int>("Menu_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Sys_MenuMenu_Id")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Action_Id");

                    b.HasIndex("Sys_MenuMenu_Id");

                    b.ToTable("Sys_Actions");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Base_ProcessLineList", b =>
                {
                    b.HasOne("iMES.Entity.DomainModels.Base_ProcessLine", null)
                        .WithMany("Base_ProcessLineList")
                        .HasForeignKey("ProcessLine_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Base_ProcessList", b =>
                {
                    b.HasOne("iMES.Entity.DomainModels.Base_Process", null)
                        .WithMany("Base_ProcessList")
                        .HasForeignKey("Process_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Cal_TeamMember", b =>
                {
                    b.HasOne("iMES.Entity.DomainModels.Cal_Team", null)
                        .WithMany("Cal_TeamMember")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Quality_InComingCheckTestItem", b =>
                {
                    b.HasOne("iMES.Entity.DomainModels.Quality_InComingCheck", null)
                        .WithMany("Quality_InComingCheckTestItem")
                        .HasForeignKey("InComingCheckId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Quality_OutCheckTestItem", b =>
                {
                    b.HasOne("iMES.Entity.DomainModels.Quality_OutCheck", null)
                        .WithMany("Quality_OutCheckTestItem")
                        .HasForeignKey("OutCheckId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Quality_ProcessCheckTestItem", b =>
                {
                    b.HasOne("iMES.Entity.DomainModels.Quality_ProcessCheck", null)
                        .WithMany("Quality_ProcessCheckTestItem")
                        .HasForeignKey("ProcessCheckId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Sys_DictionaryList", b =>
                {
                    b.HasOne("iMES.Entity.DomainModels.Sys_Dictionary", null)
                        .WithMany("Sys_DictionaryList")
                        .HasForeignKey("Dic_ID");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Sys_RoleAuth", b =>
                {
                    b.HasOne("iMES.Entity.DomainModels.Sys_Role", null)
                        .WithMany("RoleAuths")
                        .HasForeignKey("Role_Id");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Sys_TableColumn", b =>
                {
                    b.HasOne("iMES.Entity.DomainModels.Sys_TableInfo", null)
                        .WithMany("TableColumns")
                        .HasForeignKey("Table_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Sys_WorkFlowStep", b =>
                {
                    b.HasOne("iMES.Entity.DomainModels.Sys_WorkFlow", null)
                        .WithMany("Sys_WorkFlowStep")
                        .HasForeignKey("WorkFlow_Id");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Sys_WorkFlowTableStep", b =>
                {
                    b.HasOne("iMES.Entity.DomainModels.Sys_WorkFlowTable", null)
                        .WithMany("Sys_WorkFlowTableStep")
                        .HasForeignKey("WorkFlowTable_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Tools_ToolsReceiveList", b =>
                {
                    b.HasOne("iMES.Entity.DomainModels.Tools_ToolsReceive", null)
                        .WithMany("Tools_ToolsReceiveList")
                        .HasForeignKey("ToolsReceiveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Tools_ToolsReturnList", b =>
                {
                    b.HasOne("iMES.Entity.DomainModels.Tools_ToolsReturn", null)
                        .WithMany("Tools_ToolsReturnList")
                        .HasForeignKey("ToolsReturnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Ware_OutWareHouseBillList", b =>
                {
                    b.HasOne("iMES.Entity.DomainModels.Ware_OutWareHouseBill", null)
                        .WithMany("Ware_OutWareHouseBillList")
                        .HasForeignKey("OutWareHouseBill_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Ware_WareHouseBillList", b =>
                {
                    b.HasOne("iMES.Entity.DomainModels.Ware_WareHouseBill", null)
                        .WithMany("Ware_WareHouseBillList")
                        .HasForeignKey("WareHouseBill_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("iMES.Entity.Sys_Actions", b =>
                {
                    b.HasOne("iMES.Entity.DomainModels.Sys_Menu", null)
                        .WithMany("Actions")
                        .HasForeignKey("Sys_MenuMenu_Id");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Base_Process", b =>
                {
                    b.Navigation("Base_ProcessList");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Base_ProcessLine", b =>
                {
                    b.Navigation("Base_ProcessLineList");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Cal_Team", b =>
                {
                    b.Navigation("Cal_TeamMember");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Quality_InComingCheck", b =>
                {
                    b.Navigation("Quality_InComingCheckTestItem");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Quality_OutCheck", b =>
                {
                    b.Navigation("Quality_OutCheckTestItem");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Quality_ProcessCheck", b =>
                {
                    b.Navigation("Quality_ProcessCheckTestItem");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Sys_Dictionary", b =>
                {
                    b.Navigation("Sys_DictionaryList");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Sys_Menu", b =>
                {
                    b.Navigation("Actions");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Sys_Role", b =>
                {
                    b.Navigation("RoleAuths");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Sys_TableInfo", b =>
                {
                    b.Navigation("TableColumns");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Sys_WorkFlow", b =>
                {
                    b.Navigation("Sys_WorkFlowStep");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Sys_WorkFlowTable", b =>
                {
                    b.Navigation("Sys_WorkFlowTableStep");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Tools_ToolsReceive", b =>
                {
                    b.Navigation("Tools_ToolsReceiveList");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Tools_ToolsReturn", b =>
                {
                    b.Navigation("Tools_ToolsReturnList");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Ware_OutWareHouseBill", b =>
                {
                    b.Navigation("Ware_OutWareHouseBillList");
                });

            modelBuilder.Entity("iMES.Entity.DomainModels.Ware_WareHouseBill", b =>
                {
                    b.Navigation("Ware_WareHouseBillList");
                });
#pragma warning restore 612, 618
        }
    }
}

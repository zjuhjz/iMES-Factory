select ProcessLine_Id as 'key', ProcessLineName as 'value' from Base_ProcessLine;
select ProcessLine_Id as 'key', ProcessLineName as 'value' from Base_ProcessLine;
select * from View_GetProductStoreNumber;

CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `view_getproductstorenumber` AS select `a`.`product_id` AS `Product_Id`,(`a`.`inqty` - ifnull(`b`.`outqty`,0)) AS `InventoryQty` from (((select `ware_warehousebilllist`.`Product_Id` AS `product_id`,sum(`ware_warehousebilllist`.`InStoreQty`) AS `inqty` from `ware_warehousebilllist` group by `ware_warehousebilllist`.`Product_Id`)) `a` left join (select `ware_outwarehousebilllist`.`Product_Id` AS `product_id`,sum(`ware_outwarehousebilllist`.`OutStoreQty`) AS `outqty` from `ware_outwarehousebilllist` group by `ware_outwarehousebilllist`.`Product_Id`) `b` on((`a`.`product_id` = `b`.`product_id`))) union all select `ware_outwarehousebilllist`.`Product_Id` AS `product_id`,sum(-(`ware_outwarehousebilllist`.`OutStoreQty`)) AS `outqty` from `ware_outwarehousebilllist` where (not(`ware_outwarehousebilllist`.`Product_Id` in (select `ware_warehousebilllist`.`Product_Id` from `ware_warehousebilllist`))) group by `ware_outwarehousebilllist`.`Product_Id` union all select `p`.`Product_Id` AS `product_id`,0 AS `0` from `base_product` `p` where ((not(`p`.`Product_Id` in (select `ware_warehousebilllist`.`Product_Id` from `ware_warehousebilllist`))) and (not(`p`.`Product_Id` in (select `ware_outwarehousebilllist`.`Product_Id` from `ware_outwarehousebilllist`))))